.btn {
  &,
  &:link,
  &:visited {
    text-decoration: none;
    text-transform: uppercase;
    padding: 1.5rem 4rem;
    display: inline-block;
    text-align: center;
    border-radius: 0.5rem;
    transition: all 0.2s;
    position: relative;

    // Change for the button element
    border: none;
    cursor: pointer;
  }

  &:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    /* Quand on hover le bouton initial,
on applique les changements voulus au second bouton  */
    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active,
  &:focus {
    outline: none;
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: $color-white;
    }
  }

  &--green {
    background-color: $color-primary;
    color: $color-white;

    &::after {
      background-color: $color-primary;
    }
  }

  /* On créé un second bouton avec la pseudo class after et on le place derrière le bouton d'origine avec position absolute (donc position relative sur le bouton initial) ET z-index : -1 */
  &::after {
    content: " ";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 0.5rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s;
  }

  &--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /* Astuce qui permet d'utiliser la valeur de l'animation à l'étape 0% AVANT de lancer l'animation. Ca veut dire dans notre cas que le bouton sera en opacity 0 AVANT de commencer l'animation vu que à la première étape on a posé opacity:0. 
  Ca permet de retarder l'arrivée d'un élément, ou retarder le déclenchement d'une animation sans avoir l'élément en plein milieu (ce qui est dégueulasse) */
    animation-fill-mode: backwards;
  }
}

.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 0.3rem;
    transition: all 0.2s;
  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
    transform: translateY(-2px);
  }

  &:active {
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
    transform: translateY(0px);
  }
}
